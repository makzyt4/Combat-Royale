#include <iostream>
#include <SFML/Graphics.hpp>
#include <SFML/Network.hpp>
#include "./3rdparty/picojson/picojson.h"

class Test {
    public:
        int x;
        int y;

        Test(int x, int y) {
            this->x = x;
            this->y = y;
        }

        std::string serialize() {
            picojson::object v;

            v["x"] = picojson::value(this->x);
            v["y"] = picojson::value(this->y);

            return v["x"].serialize();
        }
};

int main() {
    sf::RenderWindow window(sf::VideoMode(200, 200), "SFML works!");
    sf::CircleShape shape(100.f);
    shape.setFillColor(sf::Color::Green);
    
    
    Test test(2, 3);

    std::cout << test.serialize() << std::endl;


    while (window.isOpen())
    {
        sf::Event event;
        while (window.pollEvent(event))
        {
            if (event.type == sf::Event::Closed)
                window.close();
        }

        window.clear();
        window.draw(shape);
        window.display();
    }

    return 0;
}
